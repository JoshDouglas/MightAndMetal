//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public ActingListenerComponent actingListener { get { return (ActingListenerComponent)GetComponent(GameComponentsLookup.ActingListener); } }
    public bool hasActingListener { get { return HasComponent(GameComponentsLookup.ActingListener); } }

    public void AddActingListener(System.Collections.Generic.List<IActingListener> newValue) {
        var index = GameComponentsLookup.ActingListener;
        var component = (ActingListenerComponent)CreateComponent(index, typeof(ActingListenerComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceActingListener(System.Collections.Generic.List<IActingListener> newValue) {
        var index = GameComponentsLookup.ActingListener;
        var component = (ActingListenerComponent)CreateComponent(index, typeof(ActingListenerComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveActingListener() {
        RemoveComponent(GameComponentsLookup.ActingListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherActingListener;

    public static Entitas.IMatcher<GameEntity> ActingListener {
        get {
            if (_matcherActingListener == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.ActingListener);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherActingListener = matcher;
            }

            return _matcherActingListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public void AddActingListener(IActingListener value) {
        var listeners = hasActingListener
            ? actingListener.value
            : new System.Collections.Generic.List<IActingListener>();
        listeners.Add(value);
        ReplaceActingListener(listeners);
    }

    public void RemoveActingListener(IActingListener value, bool removeComponentWhenEmpty = true) {
        var listeners = actingListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveActingListener();
        } else {
            ReplaceActingListener(listeners);
        }
    }
}
