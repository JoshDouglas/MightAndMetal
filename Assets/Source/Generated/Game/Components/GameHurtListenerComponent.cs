//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public HurtListenerComponent hurtListener { get { return (HurtListenerComponent)GetComponent(GameComponentsLookup.HurtListener); } }
    public bool hasHurtListener { get { return HasComponent(GameComponentsLookup.HurtListener); } }

    public void AddHurtListener(System.Collections.Generic.List<IHurtListener> newValue) {
        var index = GameComponentsLookup.HurtListener;
        var component = (HurtListenerComponent)CreateComponent(index, typeof(HurtListenerComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceHurtListener(System.Collections.Generic.List<IHurtListener> newValue) {
        var index = GameComponentsLookup.HurtListener;
        var component = (HurtListenerComponent)CreateComponent(index, typeof(HurtListenerComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveHurtListener() {
        RemoveComponent(GameComponentsLookup.HurtListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherHurtListener;

    public static Entitas.IMatcher<GameEntity> HurtListener {
        get {
            if (_matcherHurtListener == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.HurtListener);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherHurtListener = matcher;
            }

            return _matcherHurtListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public void AddHurtListener(IHurtListener value) {
        var listeners = hasHurtListener
            ? hurtListener.value
            : new System.Collections.Generic.List<IHurtListener>();
        listeners.Add(value);
        ReplaceHurtListener(listeners);
    }

    public void RemoveHurtListener(IHurtListener value, bool removeComponentWhenEmpty = true) {
        var listeners = hurtListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveHurtListener();
        } else {
            ReplaceHurtListener(listeners);
        }
    }
}
