//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public CombatActionListenerComponent combatActionListener { get { return (CombatActionListenerComponent)GetComponent(GameComponentsLookup.CombatActionListener); } }
    public bool hasCombatActionListener { get { return HasComponent(GameComponentsLookup.CombatActionListener); } }

    public void AddCombatActionListener(System.Collections.Generic.List<ICombatActionListener> newValue) {
        var index = GameComponentsLookup.CombatActionListener;
        var component = (CombatActionListenerComponent)CreateComponent(index, typeof(CombatActionListenerComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceCombatActionListener(System.Collections.Generic.List<ICombatActionListener> newValue) {
        var index = GameComponentsLookup.CombatActionListener;
        var component = (CombatActionListenerComponent)CreateComponent(index, typeof(CombatActionListenerComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveCombatActionListener() {
        RemoveComponent(GameComponentsLookup.CombatActionListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherCombatActionListener;

    public static Entitas.IMatcher<GameEntity> CombatActionListener {
        get {
            if (_matcherCombatActionListener == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.CombatActionListener);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherCombatActionListener = matcher;
            }

            return _matcherCombatActionListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public void AddCombatActionListener(ICombatActionListener value) {
        var listeners = hasCombatActionListener
            ? combatActionListener.value
            : new System.Collections.Generic.List<ICombatActionListener>();
        listeners.Add(value);
        ReplaceCombatActionListener(listeners);
    }

    public void RemoveCombatActionListener(ICombatActionListener value, bool removeComponentWhenEmpty = true) {
        var listeners = combatActionListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveCombatActionListener();
        } else {
            ReplaceCombatActionListener(listeners);
        }
    }
}
